name: Create Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        type: choice
        description: Release type
        options:
          - patch
          - minor
      release_scope:
        type: choice
        description: Release Scope
        options:
          - experimental
          - sdk
          - all

jobs:
  create-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: 
          repository: marcpichler/test-release-pr #later opentelemetrybot/opentelemetry-js
          ref: main
          token: ${{ secrets.OPENTELEMETRYBOT_GITHUB_TOKEN }}
      - name: Sync with upstream
        # later https://github.com/open-telemetry/opentelemetry-js.git
        run: |
          git remote show origin
          git remote add upstream https://github.com/pichlermarc-sample-organization/test-release-pr.git
          git pull upstream main
          git push origin main --force

      - uses: actions/setup-node@v4
        with:
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
          node-version: 22

      - run: npm install -g npm@latest
      - name: Bootstrap
        run: npm ci
      - name: Build ðŸ”§
        run: npm run compile
#      - name: Determine PR Status
#        id: determine-pr-status
#      # later open-telemetry/opentelemetry-js
#        run: |
#          gh pr view --repo pichlermarc-sample-organization/test-release-pr $RELEASE_PR_OWNER:release/next-version || EXIT_CODE=$?
#          echo "pr-missing=$EXIT_CODE" >> "$GITHUB_OUTPUT"
#        env:
#          GH_TOKEN: ${{ github.token }}
#          RELEASE_PR_OWNER: marcpichler # opentelemetrybot
      - name: Create PR
        run: |
          git config user.name opentelemetrybot
          git config user.email 107717825+opentelemetrybot@users.noreply.github.com
          npm run github:create_release_pr
        # if: ${{ steps.determine-pr-status.outputs.pr-missing == 1 }}
        env:
          GITHUB_TOKEN: ${{ secrets.OPENTELEMETRYBOT_GITHUB_TOKEN }}
          #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_SCOPE: ${{ github.event.inputs.release_scope }}
          RELEASE_KIND: ${{ github.event.inputs.release_scope }}:${{ github.event.inputs.release_type }}
          RELEASE_PR_REMOTE: origin
          RELEASE_PR_OWNER: marcpichler # opentelemetrybot
